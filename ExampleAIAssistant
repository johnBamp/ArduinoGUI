#include <Adafruit_GFX.h>
#include <SPI.h>
#include <Adafruit_ILI9341.h>
#include <Wire.h>
#include <Adafruit_FT6206.h>
#include <WiFi.h>
#include "time.h"
#include "arduinoGUI.h"
#include <WiFiClientSecure.h>
#include <ArduinoJson.h>
#include <ChatGPT.hpp>

#define TFT_CHIP_SLCT 14
#define TFT_DATA_CMD 32

#define baud_rate 9600

static const char *ssid = "SSID";
static const char *password = "PASSWORD";


WiFiClientSecure client;
ChatGPT<WiFiClientSecure> chat_gpt(&client, "v1", "API-KEY");

Adafruit_FT6206 ts = Adafruit_FT6206();
Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CHIP_SLCT, TFT_DATA_CMD);

Grid keyGrid = Grid(5, 10, &tft);

ScrollableLabel gptInterface = ScrollableLabel(
  "", //What text is on the label
  0, //Which row the label is in
  0, //Which collumn the label is in

  1, //Rows to take up
  10, //Collumns to take up

  ILI9341_WHITE, //Background color

  ILI9341_BLACK, //Color of text
  2, //Size of text
  false, //Bool if text should be centered or not

  &tft, //Pointer to tft object
  &keyGrid, //Pointer to grid

  4, //Spacing between cells on the x axis
  4, //Spacing between cells on the y axis

  2, //Border width
  ILI9341_WHITE, //Border color

  5, //Radius, if you want the edges to be rounded. If high enough, can become circle.

  &ts //Touchscreen pointer
);

Keyboard keys = Keyboard(&tft, &keyGrid, &ts);

void setup() {
  Serial.begin(9600);
  tft.begin();
  ts.begin();
  tft.setRotation(3);

  keys.draw();
  gptInterface.draw();

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    Serial.println("Connecting...");
    delay(500);
  }
  Serial.println("Connected!");

  // Ignore SSL certificate validation
  client.setInsecure();

}

String oldInput;

void loop() {
  keys.readKeys();
  if(oldInput != keys.input){
    gptInterface.setText(keys.input);
  }
  gptInterface.checkTouch();

  oldInput = keys.input;

  if(keys.enterClicked()){
    String result;
    if (chat_gpt.simple_message("gpt-3.5-turbo-0301", "user", keys.input, result)) {
      Serial.println("===OK===");
      Serial.println(result);
      gptInterface.setText(result);
    } else {
      Serial.println("===ERROR===");
      Serial.println(result);
    }
  }
}
